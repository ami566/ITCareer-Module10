using System;
using System.Collections.Generic;

namespace BackpackMy
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] m = { 7, 3, 4, 5 };
            int[] c = { 42, 12, 40, 25 };

            List<List<int>> bp = new List<List<int>>();
            for (int i = 1; i < 5; i++)
            {
                bp.Add(new List<int> { i });
                // Console.WriteLine(i);

                for (int j = i + 1; j < 5; j++)
                {
                    bp.Add(new List<int> { i, j });
                    // Console.WriteLine($"{i} {j}");

                    for (int k = j + 1; k < 5; k++)
                    {
                        bp.Add(new List<int> { i, j, k });
                        // Console.WriteLine($"{i} {j} {k}");

                        for (int z = k + 1; z < 5; z++)
                        {
                            bp.Add(new List<int> { i, j, k, z });
                            // Console.WriteLine($"{i} {j} {k} {z}");
                        }
                    }
                }
                Console.WriteLine();

            }


            int localWeight = 0;
            int localSum = 0;
            int maxSum = 0;
            int index = 0;
            int maxI = 0;
            int weight = 0;

            foreach (var item in bp)
            {
                foreach (var l in item)
                {
                    localWeight += m[l - 1];
                    localSum += c[l - 1];
                }

                if (localWeight <= 10)
                {
                    if (localSum > maxSum)
                    {
                        maxSum = localSum;
                        maxI = index;
                        weight = localWeight;
                    }
                }

                localWeight = 0;
                localSum = 0;
                index++;
            }

            Console.WriteLine(string.Join(",", bp[maxI]));
            Console.WriteLine($"weight = {weight}");
            Console.WriteLine($"value = {maxSum}");

        }
    }
}
